# Generated by Django 4.1.3 on 2022-11-07 16:46

from django.db import migrations, models
import django.db.models.deletion
import hitcount.models
import modelcluster.fields
import waggylabs.blocks.mathjax_markdown
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0078_referenceindex'),
        ('wagtailimages', '0024_index_image_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='WaggyLabsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_slogan', models.CharField(blank=True, help_text='Phrase, that appears in navbar on the right to the brand image.', max_length=255, verbose_name='Slogan')),
                ('show_site_name', models.BooleanField(default=True, help_text='Indicates if title of the Waggy Labs site appears in navigation bar and in browser tab e.g., Page Title - Site Name.', verbose_name='Show site name in navigation bar and browser tab')),
                ('site_name_separator', models.CharField(blank=True, help_text='Separator for site name e.g., Page Title - Site Name or Page Title : Site Name.', max_length=10, verbose_name='Separator for the site name')),
                ('site_name_alignment', models.CharField(choices=[('L', 'Before page title'), ('R', 'After page title')], default='R', help_text='The alignment of site name: before or after page title.', max_length=1)),
                ('site_theme', models.FileField(blank=True, help_text='CSS file with theme to be used instead of default Bootstrap theme. See Bootstrap documentation.', upload_to='', verbose_name='Bootstrap CSS theme')),
                ('navbar_placement', models.CharField(blank=True, choices=[('', 'Default'), ('sticky-top', 'Sticky top')], default='', help_text='Navigation bar placement options: default, sticky-top or fixed-top. See Bootstrap documentation.', max_length=10)),
                ('navbar_theme', models.CharField(blank=True, choices=[('', 'Light'), ('primary', 'Primary'), ('dark', 'Dark')], default='', help_text='Navigation bar theme: dark or light. Choice depends on the choice of the CSS Bootstrap theme.', max_length=25)),
                ('navbar_menu_alignment', models.CharField(blank=True, choices=[('', 'Left'), ('ms-md-auto', 'Right')], default='', help_text='Menu links alignment in the navigation bar.', max_length=10)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
                ('site_icon', models.ForeignKey(blank=True, help_text='Image that appears in navigation bar and in the browser tab.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Navigation bar and browser tab image')),
            ],
            options={
                'verbose_name': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='WaggyLabsSettingsSocialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(help_text='Title of the social network. For example, Instagram.', max_length=255, verbose_name='Title of the social network.')),
                ('username', models.CharField(help_text='Username for the social network.', max_length=255, verbose_name='Username for the social network')),
                ('username_prefix', models.CharField(blank=True, help_text='Additional prefix before the username if display username is selects. For example "@" for Twitter.', max_length=10, verbose_name='Prefix for the username')),
                ('icon', models.CharField(blank=True, help_text='Icon name from Font Awesome website. If left blank, title will used.', max_length=255, verbose_name='Icon name from Font Awesome website')),
                ('domain', models.CharField(blank=True, help_text='Domain name for the social network. If left blank, "com" will be used.', max_length=10, verbose_name='Domain name for the social network')),
                ('link_text', models.CharField(choices=[('icon', 'Only social netwok icon'), ('title', 'Title of the social network'), ('username', 'Username in the social network')], default='icon', help_text='Choose how to display URLs to the social networks: only icons of the networks, icons and network titles or icons and usernames in the networks. Note that some icons may not be available according to the network title. Please check Font Awesome Icons for icon availability.', max_length=10, verbose_name='Social network display text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='waggylabs.waggylabssettings')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SitePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('repeat_in_subnav', models.BooleanField(default=False, help_text="If checked, a link to this page will be repeated alongside it's direct children when displaying a sub-navigation for this page.", verbose_name='repeat in sub-navigation')),
                ('repeated_item_text', models.CharField(blank=True, help_text="e.g. 'Section home' or 'Overview'. If left blank, the page title will be used.", max_length=255, verbose_name='repeated item link text')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full subtitle', required=True)), ('blockquote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(help_text='Quote text.', required=True, rows=3)), ('author', wagtail.blocks.CharBlock(help_text='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(help_text='Source of the quoted text.', required=False)), ('anchor', wagtail.blocks.CharBlock(help_text='Anchor link id for referencing in a Markdown block using #anchor.', max_length=50, required=False))])), ('pages', wagtail.blocks.PageChooserBlock(can_choose_root=True, required=True)), ('embed', wagtail.embeds.blocks.EmbedBlock(required=True)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=True)), ('markdown', waggylabs.blocks.mathjax_markdown.MathJaxMarkdownBlock(icon='doc-full', required=True)), ('code', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', required=True, rows=4))])), ('caption', waggylabs.blocks.mathjax_markdown.MathJaxMarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Listing caption', required=False)), ('anchor', wagtail.blocks.CharBlock(help_text='Anchor link id for referencing in a Markdown block using #anchor.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='Choose an image', required=True)), ('caption', waggylabs.blocks.mathjax_markdown.MathJaxMarkdownBlock(easymde_combine='true', easymde_max_height='1500px', easymde_min_height='150px', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Figure caption', required=False)), ('anchor', wagtail.blocks.CharBlock(help_text='Anchor link id for referencing in a Markdown block using #anchor.', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.mathjax_markdown.MathJaxMarkdownBlock(easymde_combine='true', easymde_max_height='200px', easymde_min_height='200px', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.mathjax_markdown.MathJaxMarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Equation caption that will be displayed when the equation is shown in the dialog box.', required=False)), ('anchor', wagtail.blocks.CharBlock(help_text='Anchor link id for referencing in a Markdown block using #anchor. Ignored if \\label{...} is present.', max_length=50, required=False))]))], use_json_field=True)),
                ('header_image', models.ForeignKey(blank=True, help_text='Image, that appears right after the title.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model, hitcount.models.HitCountMixin),
        ),
    ]
