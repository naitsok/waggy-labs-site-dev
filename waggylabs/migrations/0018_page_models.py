# Generated by Django 4.1.6 on 2023-02-20 17:11

from django.db import migrations, models
import django.db.models.deletion
import hitcount.models
import modelcluster.contrib.taggit
import modelcluster.fields
import waggylabs.blocks.icon
import waggylabs.blocks.label
import waggylabs.blocks.markdown
import waggylabs.blocks.table
import waggylabs.fields.markdown
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('wagtailcore', '0083_workflowcontenttype'),
        ('waggylabs', '0017_refactor_blocks'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('body', wagtail.fields.StreamField([('accordion', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose item collapse style'), ('collapsible', 'Items collapse'), ('stays_open', 'Items stay open')], label='Collapse items when new items opens or keep them open')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full subtitle', label='Item Heading', required=True)), ('is_open', wagtail.blocks.BooleanBlock(label='Check if the item is displayed expanded', required=False)), ('body', wagtail.blocks.StreamBlock([('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', required=False))], required=True))])))])), ('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('card_grid', wagtail.blocks.StructBlock([('height_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose height style'), ('equal', 'Equal height'), ('not_equal', 'Height wraps to content')], label='Height')), ('grouping_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose grouping style'), ('separate', 'Separate'), ('grouped', 'Grouped')], label='Grouping')), ('orientation_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose orientation'), ('vertical', 'Vertical'), ('horizontal', 'Horizontal')], label='Orientation')), ('columns', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose columns'), (1, '1 column'), (2, '2 columns'), (3, '3 columns'), (4, '4 columns'), (5, '5 columns')], label='Number of columns')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image', required=False)), ('title', wagtail.blocks.CharBlock(label='Title', required=True)), ('subtitle', wagtail.blocks.CharBlock(label='Subtitle', required=False)), ('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, required=False)), ('links', wagtail.blocks.StreamBlock([('external_link', wagtail.blocks.StructBlock([('link', wagtail.blocks.URLBlock(label='Link to external site', required=True)), ('text', wagtail.blocks.CharBlock(label='Text of the link', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(label='Icon', required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link'))])), ('internal_link', wagtail.blocks.StructBlock([('link', wagtail.blocks.PageChooserBlock(label='Link to a page of this site')), ('text', wagtail.blocks.CharBlock(label='Text instead of page title', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(label='Icon', required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link'))])), ('email', wagtail.blocks.StructBlock([('email', wagtail.blocks.EmailBlock(label='Email address', required=True)), ('text', wagtail.blocks.CharBlock(label='Text to be displayed instead of address', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link'))])), ('info_text', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Phone, address, etc.', required=True)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link')), ('icon', waggylabs.blocks.icon.IconBlock(required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False))]))], required=False))])))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('collapse', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text on the button', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link')), ('icon', waggylabs.blocks.icon.IconBlock(required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('body', wagtail.blocks.StreamBlock([('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', required=False))], requred=True))])), ('columns', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('vertical_align', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose vertical alignment'), ('align-self-start', 'Top'), ('align-self-center', 'Center'), ('align-self-end', 'Bottom')])), ('body', wagtail.blocks.StreamBlock([('accordion', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose item collapse style'), ('collapsible', 'Items collapse'), ('stays_open', 'Items stay open')], label='Collapse items when new items opens or keep them open')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full subtitle', label='Item Heading', required=True)), ('is_open', wagtail.blocks.BooleanBlock(label='Check if the item is displayed expanded', required=False)), ('body', wagtail.blocks.StreamBlock([('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', required=False))], required=True))])))])), ('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('collapse', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text on the button', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link')), ('icon', waggylabs.blocks.icon.IconBlock(required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('body', wagtail.blocks.StreamBlock([('blockquote', wagtail.blocks.StructBlock([('quote', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Quote text.', required=True)), ('author', wagtail.blocks.CharBlock(label='Author of the quoted text.', required=False)), ('source', wagtail.blocks.CharBlock(label='Source of the quoted text.', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-blockquote', max_length=50, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment')), ('show_icon', wagtail.blocks.BooleanBlock(label='Show quote icon', required=False))])), ('carousel', wagtail.blocks.StructBlock([('color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose color style'), (' ', 'Light'), ('carousel-dark', 'Dark')], label='Carousel color')), ('switch', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose switching style'), ('false', 'Change on button'), ('false-fade', 'Fade on button'), ('carousel', 'Change after interval'), ('carousel-fade', 'Fade after interval')], label='Carousel switch type')), ('controls', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose controls'), ('none', 'No controls'), ('buttons', 'Left and right buttons'), ('indicators', 'Items indicators'), ('buttons_indicators', 'Buttons and indicators')], label='Controls of the carousel')), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Picture for carousel', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,heading,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', label='Text in front of the picture', required=False)), ('interval', wagtail.blocks.IntegerBlock(default=1000, help_text='Enter the value in milliseconds to keep the current item during this interval', label='Interval in milliseconds to keep the item', min_value=0, required=False)), ('text_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text alignment'), ('text-start', 'Left'), ('text-center', 'Center'), ('text-end', 'Right')], label='Text alignment', required=False)), ('text_color', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text color'), ('text-light', 'Light'), ('text-dark', 'Dark')], label='Text color', required=False)), ('text_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose text size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Text size', required=False))]), min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='', required=False))], requred=True))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock(help_text=''))], required=True))]), max_num=3, min_num=1))])), ('citation', wagtail.blocks.StructBlock([('citation', wagtail.blocks.CharBlock(label='Title of the citation.', required=True)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite literature using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('document', wagtail.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-cite', help_text='Cite documents using LaTeX \\cite{...} syntax in text markdown block.', required=False))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.embeds.blocks.EmbedBlock(label='URL of embedding')), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Embed caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-embed', max_length=50, required=False))])), ('equation', wagtail.blocks.StructBlock([('equation', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='false', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='subscript,superscript,equation,matrix,align,multiline,split,gather,alignat,flalign,|,preview,side-by-side,fullscreen', help_text='Write or paste LaTeX style equation (equation, matrix, align, etc. environments are supported).', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text='Caption that will be displayed when the equation is shown in the dialog box or in the sidebar.', label='Equation caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-equation', help_text='Label for the current equation to be used in the markdown block for referencing using standard LaTeX \\ㅤref{...} syntax. This label will be added only if no \\ㅤlabel{...} is found within the \\ㅤbegin{...}...\\ㅤend{...} statement.The final reference processing is happening on the published page, which can be checked using "Preview" functionality.', max_length=50, required=False))])), ('figure', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Graphic', required=True)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Figure caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-figure', max_length=50, required=False))])), ('listing', wagtail.blocks.StructBlock([('code', wagtail.blocks.StructBlock([('mode', wagtail.blocks.ChoiceBlock(choices=[('python', 'Python'), ('clike', 'C, C++, C#'), ('clike', 'Java'), ('javascript', 'Javascript'), ('xml', 'HTML, XML'), ('octave', 'MATLAB'), ('mathematica', 'Mathematica'), ('r', 'R'), ('clike', 'Kotlin'), ('swift', 'Swift'), ('powershell', 'Powershell'), ('sql', 'SQL'), ('css', 'CSS')], help_text='Choose the programming language.', label='Code language')), ('code', wagtail.blocks.TextBlock(help_text='Write or paste code.', label='Code snippet', required=True))], label=None)), ('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Listing caption', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-listing', max_length=50, required=False))])), ('table', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('table', waggylabs.blocks.table.BareTableBlock(help_text='Columns and rows can be added via context menu appearing on the right click. Markdown inside cells is supported. Inline LateX equations can be added using $...$ pattern.', keep_table_tag=False, label='Table data', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('table_figure', wagtail.blocks.StructBlock([('caption', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='150px', easymde_min_height='150px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table caption', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Table image', required=True)), ('footer', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Table footer', required=False)), ('label', waggylabs.blocks.label.LabelBlock(form_classname='waggylabs-label-table', max_length=50, required=False))])), ('text', waggylabs.blocks.markdown.MarkdownBlock())], use_json_field=True)),
                ('embed_caption_label', models.CharField(blank=True, help_text='For example, Embed. The label will be used to create embed labels before caption. Leave empty for no label.', max_length=50, verbose_name='Label for embeds')),
                ('equation_caption_label', models.CharField(blank=True, help_text='For example, Eqn. The label will be used to create equatoion labels before caption. Note, that equation labels are displayed only in preview dialogs. Leave empty for no label.', max_length=50, verbose_name='Label for equations')),
                ('figure_caption_label', models.CharField(blank=True, help_text='For example, Figure. The label will be used to create figure labels before caption. Leave empty for no label.', max_length=50, verbose_name='Label for figures')),
                ('listing_caption_label', models.CharField(blank=True, help_text='For example, Listing. The label will be used to create listing labels before caption. Leave empty for no label.', max_length=50, verbose_name='Label for listings')),
                ('table_caption_label', models.CharField(blank=True, help_text='For example, Table. The label will be used to create table labels before caption. Leave empty for no label.', max_length=50, verbose_name='Label for tables')),
                ('show_sidebar', models.BooleanField(blank=True, default=False, help_text='Controls the display of sidebar.', verbose_name='Show sidebar')),
                ('sidebar', wagtail.fields.StreamField([('sidebar', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose sidebar style'), ('default', 'Default'), ('sticky-top', 'Sticky')], label='Style of the sidebar')), ('items', wagtail.blocks.StreamBlock([('text', waggylabs.blocks.markdown.MarkdownBlock(easymde_combine='true', easymde_max_height='100px', easymde_min_height='100px', easymde_status='false', easymde_toolbar_config='bold,italic,strikethrough,|,unordered-list,ordered-list,link,|,code,subscript,superscript,|,preview,side-by-side,fullscreen,guide', help_text=None, label='Sidebar text', required=True)), ('page_info', wagtail.blocks.StructBlock([('show_user', wagtail.blocks.BooleanBlock(label='Show the name of page creator', required=False)), ('user_header', wagtail.blocks.CharBlock(help_text='Displays the header of the row in which the page creator name is displayed.', label='Header of the page creator row', required=False)), ('show_email', wagtail.blocks.BooleanBlock(label='Show the email of page creator', required=False)), ('email_header', wagtail.blocks.CharBlock(help_text='Displays the header of the row in which the page creator email is displayed.', label='Header of the page creator email row', required=False)), ('show_first_published_at', wagtail.blocks.BooleanBlock(label='Date of page creation', required=False)), ('first_published_at_header', wagtail.blocks.CharBlock(help_text='Displays the header of the row in which the page creator date is displayed.', label='Header of the page creation date', required=False)), ('show_last_published_at', wagtail.blocks.BooleanBlock(label='Date of last page update', required=False)), ('last_published_at_header', wagtail.blocks.CharBlock(help_text='Displays the header of the row in which the last page update is displayed.', label='Header of last page update', required=False)), ('show_time', wagtail.blocks.BooleanBlock(label='Show time in the date fields', required=False)), ('time_format', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose time format'), ('G:i', '24-hour format'), ('g:i A', '12-hour format')], label='Time format', required=False)), ('header_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose row header style'), ('fst-normal', 'Default'), ('fw-bold', 'Bold'), ('fw-bolder', 'Bolder'), ('fw-semibold', 'Semibold'), ('fw-normal', 'Normal'), ('fw-light', 'Light'), ('fw-lighter', 'Lighter'), ('fst-italic', 'Italic'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info')], label='Row header style')), ('data_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose row header style'), ('fst-normal', 'Default'), ('fw-bold', 'Bold'), ('fw-bolder', 'Bolder'), ('fw-semibold', 'Semibold'), ('fw-normal', 'Normal'), ('fw-light', 'Light'), ('fw-lighter', 'Lighter'), ('fst-italic', 'Italic'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Row style'))])), ('tabs', wagtail.blocks.StructBlock([('tabs_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose tabs style'), ('nav nav-tabs', 'Tabs'), ('nav nav-pills', 'Pills'), ('nav nav-pills nav-fill', 'Wide pills')], label='Tabs style')), ('buttons_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose button style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('link-default', 'Default link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Tab buttons style')), ('tabs_font_size', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose font size'), ('fs-6', 'Normal'), ('fs-5', 'Bigger'), ('fs-4', 'Big'), ('fs-3', 'Larger'), ('fs-2', 'Large')], label='Tabs font size')), ('tabs_orientation', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose button orientation'), ('tabs-default', 'Horizontal'), ('flex-column', 'Vertical')], label='Tabs orientation')), ('tabs_justify', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose horizontal alignment'), ('justify-content-start', 'Align left'), ('justify-content-center', 'Align center'), ('justify-content-end', 'Align right')], label='Tabs orientation')), ('tabs_close', wagtail.blocks.BooleanBlock(help_text='Allows to collapse sidebar and use full page with for content.', label='Show close button', required=False)), ('items', wagtail.blocks.StreamBlock([('table_of_contents', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Title to appear on the tab.', label='Tab title', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(label='Tab icon', required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False))])), ('visuals', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Tab title', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(label='Tab icon', required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False)), ('preview_buttons_text', wagtail.blocks.CharBlock(label='Preview buttons text', required=False)), ('preview_buttons_icon', waggylabs.blocks.icon.IconBlock(label='Preview buttons icon', required=False)), ('preview_buttons_icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Preview buttons icon location', required=False)), ('preview_buttons_style', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose style'), ('btn btn-primary', 'Button primary'), ('btn btn-secondary', 'Button secondary'), ('btn btn-success', 'Button success'), ('btn btn-danger', 'Button danger'), ('btn btn-warning', 'Button warning'), ('btn btn-info', 'Button info'), ('btn btn-outline-primary', 'Button outline primary'), ('btn btn-outline-secondary', 'Button outline secondary'), ('btn btn-outline-success', 'Button outline success'), ('btn btn-outline-danger', 'Button outline danger'), ('btn btn-outline-warning', 'Button outline warning'), ('btn btn-outline-info', 'Button outline info'), ('card-link', 'Card link'), ('nav-link', 'Navigation bar link'), ('nav-link active', 'Navigation bar active link'), ('link-primary', 'Primary link'), ('link-secondary', 'Secondary link'), ('link-success', 'Success link'), ('link-danger', 'Danger link'), ('link-warning', 'Warning link'), ('link-info', 'Info link'), ('link-light', 'Light link'), ('link-dark', 'Dark link')], label='Style of the link')), ('include_embeds', wagtail.blocks.BooleanBlock(label='Include embeds', required=False)), ('include_equations', wagtail.blocks.BooleanBlock(label='Include equations', required=False)), ('include_figures', wagtail.blocks.BooleanBlock(label='Include figures', required=False)), ('include_listings', wagtail.blocks.BooleanBlock(label='Include listings', required=False)), ('include_tables', wagtail.blocks.BooleanBlock(label='Include tables', required=False))])), ('citations', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Title to appear on the tab.', label='Tab title', required=False)), ('icon', waggylabs.blocks.icon.IconBlock(label='Tab icon', required=False)), ('icon_location', wagtail.blocks.ChoiceBlock(choices=[('', 'Choose icon location'), ('start', 'Before text'), ('end', 'After text')], label='Icon location', required=False))]))]))]))]))]))], blank=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', waggylabs.fields.markdown.MarkdownField()),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TagProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='PostListPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='waggylabs.basepage')),
                ('repeat_in_subnav', models.BooleanField(default=False, help_text="If checked, a link to this page will be repeated alongside it's direct children when displaying a sub-navigation for this page.", verbose_name='repeat in sub-navigation')),
                ('repeated_item_text', models.CharField(blank=True, help_text="e.g. 'Section home' or 'Overview'. If left blank, the page title will be used.", max_length=255, verbose_name='repeated item link text')),
            ],
            options={
                'abstract': False,
            },
            bases=('waggylabs.basepage', models.Model),
        ),
        migrations.CreateModel(
            name='PostPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='waggylabs.basepage')),
                ('pin_in_list', models.BooleanField(default=False, help_text='Indicates if the post is pinned on the post list page.', verbose_name='Pin in list')),
                ('categories', modelcluster.fields.ParentalManyToManyField(blank=True, to='waggylabs.postcategory', verbose_name='Categories')),
            ],
            options={
                'abstract': False,
            },
            bases=('waggylabs.basepage',),
        ),
        migrations.CreateModel(
            name='PostPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_page_tags', to='waggylabs.postpage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='postpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text=None, through='waggylabs.PostPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='PostPagePostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_pages', to='waggylabs.postcategory')),
                ('post_page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_categories', to='waggylabs.postpage')),
            ],
            options={
                'unique_together': {('post_page', 'post_category')},
            },
        ),
    ]
